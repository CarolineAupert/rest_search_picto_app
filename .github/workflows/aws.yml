# This workflow will build and push a new container image to Amazon Beanstalk.

name: Deploy to Amazon Beanstalk (CD)
    
on:
  workflow_run:
    workflows: ["Maven Continuous Integration (CI)"]
    # Execute the workflow once the CI workflow is completed on main branch.
    types: [completed]
    branches:
      - main

env:
  AWS_REGION: eu-west-3                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: caukaro           # set this to your Amazon ECR repository name
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }} # The bucket to deploy the app
  APPLICATION_NAME: ${{ secrets.AWS_APPLICATION_NAME }}
  ENVIRONMENT_NAME: ${{ secrets.AWS_ENVIRONMENT_NAME }}
  VERSION_TAG: ${{ github.sha }}
  ZIP_FILE: picto-sketchnote-v${{ github.sha }}.zip

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3
        
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2     

    - name: Build project with Maven
      run: mvn -B package --file pom.xml
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

#	TODO : manage version id
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.VERSION_TAG }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.VERSION_TAG }}
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:${{ env.VERSION_TAG }}" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon dockerrun file
      id: dockerrun-setup
      uses: danielr1996/envsubst-action@1.0.0
      env:
        IMAGE_NAME: ${{ steps.build-image.outputs.image }}
      with:
        input: .aws/Dockerrun.template.json
        output: Dockerrun.aws.json

    - name: Upload file to S3 bucket
      run: |
       aws s3 cp Dockerrun.aws.json s3://${{ env.AWS_S3_BUCKET }}
       zip -r ${{ env.ZIP_FILE }} Dockerrun.aws.json

    - name: Deploy new ElasticBeanstalk Application Version
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ env.APPLICATION_NAME }}
        environment_name: ${{ env.ENVIRONMENT_NAME }}
        version_label: ${{ env.VERSION_TAG }}
        version_description : ${{ github.sha }}
        region: ${{ env.AWS_REGION }}
        deployment_package: ${{ env.ZIP_FILE }} 
